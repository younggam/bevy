window.SIDEBAR_ITEMS = {"enum":[["VisibilitySystems",""],["WindowSystem",""]],"fn":[["calculate_bounds",""],["check_visibility","System updating the visibility of entities each frame."],["prepare_windows","Creates and (re)configures window surfaces, and obtains a swapchain texture for rendering."],["update_frusta",""]],"mod":[["visibility",""],["window",""]],"struct":[["ComputedVisibility","Algorithmically-computed indication of whether an entity is visible and should be extracted for rendering"],["ExtractedView",""],["ExtractedWindow",""],["ExtractedWindows",""],["Msaa","Configuration resource for Multi-Sample Anti-Aliasing."],["NoFrustumCulling","Use this component to opt-out of built-in frustum culling for Mesh entities"],["NonSendMarker","Token to ensure a system runs on the main thread."],["PostProcessWrite",""],["RenderLayers","Describes which rendering layers an entity belongs to."],["ViewDepthTexture",""],["ViewPlugin",""],["ViewTarget",""],["ViewUniform",""],["ViewUniformOffset",""],["ViewUniforms",""],["Visibility","User indication of whether an entity is visible. Propagates down the entity hierarchy. If an entity is hidden in this way,  all [`Children`] (and all of their children and so on) will also be hidden. This is done by setting the values of their [`ComputedVisibility`] component."],["VisibilityBundle","A [`Bundle`] of the [`Visibility`] and [`ComputedVisibility`] `Component`s, which describe the visibility of an entity."],["VisibilityPlugin",""],["VisibleEntities","Collection of entities visible from the current view."],["WindowRenderPlugin",""],["WindowSurfaces",""]],"type":[["Layer","An identifier for a rendering layer."]]};