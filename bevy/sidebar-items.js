window.SIDEBAR_ITEMS = {"mod":[["animation","Provides types and plugins for animations."],["app","Build bevy apps, create plugins, and read events."],["asset","Load and store assets and resources for Apps."],["audio","Provides types and plugins for audio playback."],["core","Contains core plugins."],["core_pipeline","Core render pipeline."],["diagnostic","Useful diagnostic plugins and types for bevy apps."],["dynamic_plugin","Dynamic linking of plugins"],["ecs","Bevy’s entity-component-system."],["gilrs","Bevy interface with `GilRs` - “Game Input Library for Rust” - to handle gamepad inputs."],["gltf","Support for GLTF file loading."],["hierarchy","Entity hierarchies and property inheritance"],["input","Resources and events for inputs, e.g. mouse/keyboard, touch, gamepads, etc."],["log","Logging capabilities"],["math","Math types (Vec3, Mat4, Quat, etc) and helpers."],["pbr","Physically based rendering."],["prelude","`use bevy::prelude::*;` to import common components, bundles, and plugins."],["ptr","Utilities for working with untyped pointers in a more safe way."],["reflect","Type reflection used for dynamically interacting with rust types."],["render","Cameras, meshes, textures, shaders, and pipelines. Use `RenderDevice::features`, `RenderDevice::limits`, and the `WgpuAdapterInfo` resource to get runtime information about the actual adapter, backend, features, and limits."],["scene","Save/load collections of entities and components to/from file."],["sprite","Items for sprites, rects, texture atlases, etc."],["tasks","Pools for async, IO, and compute tasks."],["text","Text drawing, styling, and font assets."],["time","Contains time utilities."],["transform","Local and global transforms (e.g. translation, scale, rotation)."],["ui","User interface components and widgets."],["utils","Various miscellaneous utilities for easing development"],["window","Configuration, creation, and management of one or more windows."],["winit","Window creation, configuration, and handling"]],"struct":[["DefaultPlugins","This plugin group will add all the default plugins:"],["MinimalPlugins","Minimal plugin group that will add the following plugins:"]]};